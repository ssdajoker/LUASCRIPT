local _LS = require("runtime/core/enhanced_runtime")

-- Generated by LUASCRIPT Enhanced Transpiler
-- Mathematical programming with Unicode operator support

local Vector3 = {}
Vector3.__index = Vector3
function Vector3.new(x, y, z)
  local self = setmetatable({}, Vector3)
  self.x = (x or 0.0)
  self.y = (y or 0.0)
  self.z = (z or 0.0)
  return self
end
function Vector3:magnitude()
  return math.sqrt((((self.x * self.x) + (self.y * self.y)) + (self.z * self.z)))
end
function Vector3:normalize()
  local mag = self:magnitude()
  if (mag == 0) then
    return Vector3.new(0, 0, 0)
  end
  return Vector3.new((self.x / mag), (self.y / mag), (self.z / mag))
end
function Vector3:add(other)
  return Vector3.new((self.x + other.x), (self.y + other.y), (self.z + other.z))
end
function Vector3:dot(other)
  return (((self.x * other.x) + (self.y * other.y)) + (self.z * other.z))
end
local v1 = Vector3.new(1.0, 2.0, 3.0)
local v2 = Vector3.new(4.0, 5.0, 6.0)
console:log("Vector 1:", v1)
console:log("Vector 2:", v2)
console:log("V1 magnitude:", v1:magnitude())
console:log("V2 magnitude:", v2:magnitude())
local v3 = v1:add(v2)
console:log("V1 + V2:", v3)
console:log("V1 Â· V2:", v1:dot(v2))
local normalized = v1:normalize()
console:log("V1 normalized:", normalized)
console:log("Normalized magnitude:", normalized:magnitude())